name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ '*' ]

jobs:
  formatting:
    name: Formatting
    runs-on: [arc-runner-set]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Go mod tidy checker
        id: gomodtidy
        uses: ./.github/actions/gomodtidy
        with:
          github_token: ${{ secrets.GH_TOKEN }}

  gosec:
    name: Gosec scan
    runs-on: [arc-runner-set]
    env:
      GO111MODULE: on
      GOPRIVATE: github.com/superblock-dev
      GH_ACCESS_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Go 1.20.3
        uses: actions/setup-go@v4
        with:
          go-version: '1.20.3'
          cache: false
        id: go
      - run: git config --global url."https://$GH_ACCESS_TOKEN@github.com/superblock-dev".insteadOf "https://github.com/superblock-dev"
      - name: Run Gosec Security Scanner
        run: | # https://github.com/securego/gosec/issues/469
          export PATH=$PATH:$(go env GOPATH)/bin
          go install github.com/securego/gosec/v2/cmd/gosec@v2.15.0
          gosec -exclude=G307 -exclude-dir=crypto/bls/herumi ./...

  lint:
    name: Lint
    runs-on: [arc-runner-set]
    env:
      GOPRIVATE: github.com/superblock-dev
      GH_ACCESS_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go 1.20.3
        uses: actions/setup-go@v4
        with:
          go-version: '1.20.3'
          cache: false
      - run: git config --global url."https://$GH_ACCESS_TOKEN@github.com/superblock-dev".insteadOf "https://github.com/superblock-dev"
      - name: Golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53
          args: --config=.golangci.yml --out-${NO_FUTURE}format colored-line-number    
          skip-pkg-cache: true
          skip-build-cache: true

  build:
    name: Build
    runs-on: [arc-runner-set]
    env:
        GOPRIVATE: github.com/superblock-dev
        GH_ACCESS_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Set up Go 1.20.3
        uses: actions/setup-go@v4
        with:
          go-version: '1.20.3'
          cache: false
        id: go

      - name: Check out code into the Go module directoryrm -rf bo  
        uses: actions/checkout@v3
      - run: git config --global url."https://$GH_ACCESS_TOKEN@github.com/superblock-dev".insteadOf "https://github.com/superblock-dev"
      - name: Get dependencies
        run: |
          go get -v -t -d ./...
      - name: Build
        # Use blst tag to allow go and bazel builds for blst.
        run: go build -v ./...
        env: 
           CGO_CFLAGS: "-O -D__BLST_PORTABLE__"
        # fuzz leverage go tag based stubs at compile time.
        # Building and testing with these tags should be checked and enforced at pre-submit.
      - name: Test for fuzzing
        run: go test  -tags=fuzz,develop ./...  -test.run=^Fuzz
        env: 
           CGO_CFLAGS: "-O -D__BLST_PORTABLE__"


# # Tests run via Bazel for now...
#      - name: Test
#        run: go test -v ./...