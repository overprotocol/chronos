name: Build Docker images with Bazel and push to Docker Hub

on:
  workflow_call:
    inputs:
      tag_name:
        required: true
        type: string
      version_name:
        required: true
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  build-images:
    runs-on: ubuntu-latest
    container:
      image: overfoundation/bazel-cross:latest
    outputs:
      docker_tag: ${{ steps.set-docker-tag.outputs.docker_tag }}
    steps:
      - uses: actions/checkout@v3
      - name: Git config
        run: |
          git config --global --add safe.directory /__w/chronos/chronos

      - name: Set Docker Tag
        id: set-docker-tag
        run: |
          echo "docker_tag=${{ inputs.version_name }}_${{ inputs.tag_name }}" >> $GITHUB_OUTPUT

      - name: Build images
        run: |
          echo "Building images for ${{ steps.set-docker-tag.outputs.docker_tag }}"
          bazel build \
            --config=release \
            --define=DOCKER_TAG=${{ steps.set-docker-tag.outputs.docker_tag }} \
            //cmd/beacon-chain:image_bundle.tar \
            //cmd/validator:image_bundle.tar

      - name: Upload Docker image artifacts
        uses: actions/upload-artifact@v3
        with:
          name: docker-images
          path: |
            bazel-bin/cmd/beacon-chain/image_bundle.tar
            bazel-bin/cmd/validator/image_bundle.tar

  push-images:
    needs: build-images
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker image artifacts
        uses: actions/download-artifact@v3
        with:
          name: docker-images
          path: bazel-bin

      - name: List files
        run: |
          find bazel-bin -maxdepth 5 -type f -ls

      - name: Load images
        run: |
          docker load -i bazel-bin/cmd/beacon-chain/image_bundle.tar
          docker load -i bazel-bin/cmd/validator/image_bundle.tar

      - name: Login docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push images
        run: |
          echo "Pushing images for ${{ needs.build-images.outputs.docker_tag }}"
          docker push overfoundation/chronos-beacon-chain:${{ needs.build-images.outputs.docker_tag }}
          docker push overfoundation/chronos-validator:${{ needs.build-images.outputs.docker_tag }}
