name: Deploy triggered with tags

on:
  push:
    tags:
      # parse names from tags v{version}_{name}
      - "v*_*"

env:
  S3_BUCKET_NAME: over-protocol-dist

jobs:
  extract_name:
    runs-on: [arc-runner-set]
    outputs:
      tag_name: ${{ steps.extract.outputs.tag_name }}
      version_name: ${{ steps.extract.outputs.version_name }}
    steps:
      - uses: actions/checkout@v3
      - name: Extract tag name, version
        id: extract
        run: |
          full_tag="${{ github.ref_name }}"
          version_name="${full_tag%%_*}"
          tag_name="${full_tag#*_}"
          echo "tag_name=$tag_name" >> $GITHUB_OUTPUT
          echo "version_name=$version_name" >> $GITHUB_OUTPUT

  build:
    needs: extract_name
    strategy:
      matrix:
        symbol-list:
          [
            chronos_osx_amd64,
            chronos_osx_arm64,
            chronos_windows,
            chronos_linux_amd64,
            chronos_linux_arm64,
          ]
    uses: ./.github/workflows/dist.upload.yml
    name: build
    with:
      build_type: ${{ matrix.symbol-list }}
      tag_name: ${{ needs.extract_name.outputs.tag_name }}
      version_name: ${{ needs.extract_name.outputs.version_name }}

  node-pack-lipo:
    needs: [extract_name, build]
    runs-on: [self-hosted, macmini-local]
    steps:
      - uses: actions/checkout@v3
      - name: Download osx amd64 artifact
        uses: actions/download-artifact@v3
        with:
          name: chronos-dist-${{ github.sha }}-chronos_osx_amd64
          path: dist/bin
      - name: Download osx arm64 artifact
        uses: actions/download-artifact@v3
        with:
          name: chronos-dist-${{ github.sha }}-chronos_osx_arm64
          path: dist/bin
      - run: lipo -create -output dist/bin/mac/chronos dist/bin/mac/amd64/chronos dist/bin/mac/arm64/chronos
      - run: lipo -create -output dist/bin/mac/validator dist/bin/mac/amd64/validator dist/bin/mac/arm64/validator
      - run: rm -r -f dist/bin/mac/amd64 dist/bin/mac/arm64
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: chronos-dist-${{ github.sha }}-chronos_osx
          path: dist/bin

  codesign-osx:
    needs: [extract_name, build, node-pack-lipo]
    runs-on: [self-hosted, macmini-local]
    steps:
      - uses: actions/checkout@v3
      - name: Download osx artifact
        uses: actions/download-artifact@v3
        with:
          name: chronos-dist-${{ github.sha }}-chronos_osx
          path: dist/bin
      - name: Run codesign script for chronos
        run: sh ~/codesign/osx/codesign.sh
        env:
          BINARY_PATH: ${{ github.workspace }}/dist/bin/mac/chronos
      - name: Run codesign script for validator
        run: sh ~/codesign/osx/codesign.sh
        env:
          BINARY_PATH: ${{ github.workspace }}/dist/bin/mac/validator
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: chronos-dist-${{ github.sha }}-chronos_osx_with_codesign
          path: dist/bin

  codesign-win:
    needs: [extract_name, build]
    runs-on: [self-hosted, macmini-local]
    steps:
      - uses: actions/checkout@v3
      - name: Download windows artifact
        uses: actions/download-artifact@v3
        with:
          name: chronos-dist-${{ github.sha }}-chronos_windows
          path: dist/bin
      - name: Run codesign script for chronos
        run: sh ~/codesign/win/codesign.sh
        env:
          BINARY_PATH: ${{ github.workspace }}/dist/bin/win/chronos.exe
          TOKEN_PASSWORD: ${{ secrets.WINDOWS_SIGN_TOKEN_PASSWORD }}
      - name: Run codesign script for validator
        run: sh ~/codesign/win/codesign.sh
        env:
          BINARY_PATH: ${{ github.workspace }}/dist/bin/win/validator.exe
          TOKEN_PASSWORD: ${{ secrets.WINDOWS_SIGN_TOKEN_PASSWORD }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: chronos-dist-${{ github.sha }}-chronos_windows_with_codesign
          path: dist/bin

  node-pack:
    needs: [extract_name, build, codesign-osx, codesign-win]
    runs-on: [arc-runner-set]
    steps:
      - uses: actions/checkout@v3
      - name: Download windows artifact
        uses: actions/download-artifact@v3
        with:
          name: chronos-dist-${{ github.sha }}-chronos_windows_with_codesign
          path: dist/bin
      - name: Download linux artifact
        uses: actions/download-artifact@v3
        with:
          name: chronos-dist-${{ github.sha }}-chronos_linux_amd64
          path: dist/bin
      - name: Download osx artifact
        uses: actions/download-artifact@v3
        with:
          name: chronos-dist-${{ github.sha }}-chronos_osx_with_codesign
          path: dist/bin
      - run: mv dist/bin/linux/amd64/chronos dist/bin/linux/chronos
      - run: mv dist/bin/linux/amd64/validator dist/bin/linux/validator
      - run: rm -rf dist/bin/linux/amd64
      - run: zip -r dist/over-node-chronos.zip dist/bin
      - name: Upload to AWS S3
        run: |
          aws s3 cp ./dist/over-node-chronos.zip \
          ${{ format('s3://{0}/{1}/{2}/over-node-chronos.zip',  env.S3_BUCKET_NAME, needs.extract_name.outputs.version_name, needs.extract_name.outputs.tag_name ) }} \
          --acl public-read --profile over-dist

  notification:
    needs: [extract_name, build, node-pack]
    runs-on: [self-hosted, linux, x64]
    steps:
      - name: Drop metadata
        run: |
          echo "<${{ format('https://{0}.s3.ap-northeast-2.amazonaws.com/{1}/{2}/over-node-chronos.zip',  env.S3_BUCKET_NAME, needs.extract_name.outputs.version_name, needs.extract_name.outputs.tag_name ) }}|over-node-chronos.zip>" >> /usr/local/share/notification/chronos/${{ env.S3_BUCKET_NAME }}
      - run: sh /usr/local/share/notification/chronos/over_dist_notification.sh ${{ needs.extract_name.outputs.version_name }} ${{ needs.extract_name.outputs.tag_name }}
